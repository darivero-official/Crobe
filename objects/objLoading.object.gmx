<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Defining variables
v_loading_txt = global.v_loading_txt; //Set loading text
x = global.dvc_width/2; //Set x position
y = global.dvc_height/2; //Set y position
image_xscale = 0.2*global.scaling; //Set image xscale
image_yscale = 0.2*global.scaling; //Set image yscale
image_alpha = 0; //Set image alpha to 0
v_msg_fnt_size = font_get_size(global.v_msg_fnt)+(font_get_size(global.v_msg_fnt)/2); //Get font size from v_msg_fnt
//Additional variables
v_enabled = true; //Set message is enabled
v_image_chance = 1; //Set image chance (used in step event)
v_image_angle_speed = 0; //Set custom image angle speed
v_image_angle_speed_enable = true; //Set custom image angle speed enable
//Shader properties
surf_shd_bc = surface_create(global.v_shd_res_x,global.v_shd_res_y); //Create a surface for brightness contrast shader
surf_shd_bc_xscale = 1; //Set xscale properties for brightness contrast shader surface
surf_shd_bc_yscale = 1; //Set yscale properties for brightness contrast shader surface
surf_shd_bc_angle = 0; //Set angle properties for brightness contrast shader surface
surf_shd_bc_blend = c_white; //Set blend properties for brightness contrast shader surface
surf_shd_bc_alpha = 0.5; //Set alpha properties for brightness contrast shader surface
view_surface_id[0] = surf_shd_bc; //Set view surface id to brightness contrast shader surface
v_shd_bc_brightness_amount = 0; //Set brightness amount for brightness contrast shader
v_shd_bc_contrast_amount = 0; //Set contrast amount for brightness contrast shader
v_shd_bc_contrast_amount_max = -2; //Set contrast max amount to -2
v_shd_blur_enable = 1; //Set blur shader disabled
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///When destroyed
global.v_loading_txt = ""; //Set loading text to default
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controlling object
if v_image_chance = 1 { //Check if image has chance to show up
    if v_image_angle_speed_enable = true { //Check if image angle speed is enabled
        if v_image_angle_speed &lt; 15 { //Check if image angle speed is smaller than 15
            v_image_angle_speed += 0.5; //Increase image angle speed by 0.5
        }
        else if v_image_angle_speed = 15 { //Check if image angle speed is same as 15
            v_image_angle_speed_enable = false; //Disable image angle speed
        }
    }
    else {
        if v_image_angle_speed &gt; 2.5 { //Check if image angle speed is bigger than 2.5
            v_image_angle_speed -= 0.5; //Decrease image angle speed by 2
        }
        else if v_image_angle_speed = 2.5 { //Check if image angle speed is same as 2.5
            v_image_angle_speed_enable = true; //Enable image angle speed
        }
    }
}
else {
    v_image_angle_speed_enable = false  //Disable image angle speed
    if v_image_angle_speed_enable = false { //Check if image angle speed is disabled
        if v_image_angle_speed &gt; 2.5 { //Check if image angle speed is bigger than 2.5
            v_image_angle_speed -= 0.5; //Decrease image angle speed by 0.5
        }
    }
}
image_angle += v_image_angle_speed; //Increase image angle to image angle speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Updating variables
v_loading_txt = global.v_loading_txt; //Set loading text
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controlling object
//Controlling popup
if v_enabled = true { //Check if message is enabled
    global.btn_allow = false; //Dissallow all buttons
    if v_shd_bc_contrast_amount &gt; v_shd_bc_contrast_amount_max { //Check if contrast amount is bigger than contrast amount max
        v_shd_bc_contrast_amount -= 0.05; //Decrease contrast amount by 0.1
    }
    if image_alpha &lt; 1 { //Check if image alpha is smaller than 1
        image_alpha += 0.1; //Increase image alpha by 0.1
    }
}
else {
    global.btn_allow = true; //Allow all buttons
    if v_shd_bc_contrast_amount &lt; 0 { //Check if contrast amount is smaller than 0
        v_shd_bc_contrast_amount += 0.1; //Increase contrast amount by 0.1
    }
    if image_alpha &gt; 0 { //Check if image alpha is bigger than 0
        image_alpha -= 0.1; //Decrease image alpha by 0.1
    }
    else if image_alpha = 0 { //Check if image alpha is 0
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing object
draw_set_font(global.v_msg_fnt); //Set font
draw_set_halign(fa_center); //Set horizontal align
draw_set_valign(fa_middle); //Set vertical align
//Draw shader
shader_set(shdBc); //Load brightness contrast shader
shader_set_uniform_f(shader_get_uniform(shdBc,"brightness_amount"),v_shd_bc_brightness_amount); //Set uniform brightness amount for brightness contrast shader
shader_set_uniform_f(shader_get_uniform(shdBc,"contrast_amount"),v_shd_bc_contrast_amount); //Set uniform contrast amount for brightness contrast shader
draw_surface_ext(surf_shd_bc,view_xview[0],view_yview[0],surf_shd_bc_xscale,surf_shd_bc_yscale,surf_shd_bc_angle,surf_shd_bc_blend,surf_shd_bc_alpha); //Draw and place shader
shader_reset();
if v_shd_blur_enable = 1 { //Check if blur shader is enabled
    //Additional shader (uses brightness contrast shader properties)
    shader_set(shdBlur); //Load blur shader
    draw_surface_ext(surf_shd_bc,view_xview[0],view_yview[0],surf_shd_bc_xscale,surf_shd_bc_yscale,surf_shd_bc_angle,surf_shd_bc_blend,surf_shd_bc_alpha); //Draw and place shader
    shader_reset();
}
//Logo creation
draw_set_alpha(image_alpha); //Set image alpha
draw_text(x,y,v_loading_txt); //Draw loading text
draw_sprite_ext(sprSplash_loading,image_index,x-(string_width_ext(v_loading_txt,v_msg_fnt_size,display_get_gui_width())/2)-(((290*image_xscale*global.scaling))/1.5),y,image_xscale,image_yscale,image_angle,c_white,image_alpha); //Draw loading image
draw_reset(); //Resetting all drawing
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
