<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Defining variables
x = global.dvc_width/2; //Set x position
y = global.dvc_height/2; //Set y position
image_xscale = 0.2*global.scaling; //Set image xscale
image_yscale = 0.2*global.scaling; //Set image yscale
v_msg_fnt_size = font_get_size(global.v_msg_fnt)+(font_get_size(global.v_msg_fnt)/2); //Get font size from v_msg_fnt
v_dp_uname = global.dp_uname;
v_dp_pass = scr_string_encrypt(global.dp_pass,salt);
v_http_id_uid = passport_signin(v_dp_uname,v_dp_pass,"dp_uid"); //Read user id
v_http_id_email = noone; //Set user email address
v_http_id_uname = noone; //Set user name
v_http_id_pass = noone; //Set user password
v_http_id_verified = noone; //Set user verified
v_http_id_role = noone; //Set user role
v_http_id_ucredits = noone; //Set user credits
v_http_id_uscredits = noone; //Set user special credits
v_http_id_ldate = noone; //Set user last login
v_txt_details = "Retrieving user id..."; //Set text details
v_process = 0; //Set process position
v_alarm = -1; //Set alarm timer to -1 (disabled)
//Additional variables
v_enabled = true; //Set message is enabled
v_image_chance = 1; //Set image chance (used in step event)
v_image_angle_speed = 0; //Set custom image angle speed
v_image_angle_speed_enable = true; //Set custom image angle speed enable
//Shader properties
surf_shd_bc = surface_create(global.v_shd_res_x,global.v_shd_res_y); //Create a surface for brightness contrast shader
surf_shd_bc_xscale = 1; //Set xscale properties for brightness contrast shader surface
surf_shd_bc_yscale = 1; //Set yscale properties for brightness contrast shader surface
surf_shd_bc_angle = 0; //Set angle properties for brightness contrast shader surface
surf_shd_bc_blend = c_white; //Set blend properties for brightness contrast shader surface
surf_shd_bc_alpha = 0.5; //Set alpha properties for brightness contrast shader surface
view_surface_id[0] = surf_shd_bc; //Set view surface id to brightness contrast shader surface
v_shd_bc_brightness_amount = 0; //Set brightness amount for brightness contrast shader
v_shd_bc_contrast_amount = 0; //Set contrast amount for brightness contrast shader
v_shd_bc_contrast_amount_max = -2; //Set contrast max amount to -2
v_shd_blur_enable = 1; //Set blur shader disabled
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///When destroyed
if v_process = 7 { //If process is 7 (completed)
    scr_pop_mes("The data has been successfully saved.",1,"start","","Start","",0); //Show message
}
else {
    scr_pop_mes("Failed to parse data from passport.",2,"passport_read_data","pass_log","Retry","Login",1); //Show message
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controlling object
if v_image_chance = 1 { //Check if image has chance to show up
    if v_image_angle_speed_enable = true { //Check if image angle speed is enabled
        if v_image_angle_speed &lt; 15 { //Check if image angle speed is smaller than 15
            v_image_angle_speed += 0.5; //Increase image angle speed by 0.5
        }
        else if v_image_angle_speed = 15 { //Check if image angle speed is same as 15
            v_image_angle_speed_enable = false; //Disable image angle speed
        }
    }
    else {
        if v_image_angle_speed &gt; 2.5 { //Check if image angle speed is bigger than 2.5
            v_image_angle_speed -= 0.5; //Decrease image angle speed by 2
        }
        else if v_image_angle_speed = 2.5 { //Check if image angle speed is same as 2.5
            v_image_angle_speed_enable = true; //Enable image angle speed
        }
    }
}
else {
    v_image_angle_speed_enable = false  //Disable image angle speed
    if v_image_angle_speed_enable = false { //Check if image angle speed is disabled
        if v_image_angle_speed &gt; 2.5 { //Check if image angle speed is bigger than 2.5
            v_image_angle_speed -= 0.5; //Decrease image angle speed by 0.5
        }
    }
}
image_angle += v_image_angle_speed; //Increase image angle to image angle speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controlling object
//Controlling popup
if v_enabled = true { //Check if message is enabled
    if v_shd_bc_contrast_amount &gt; v_shd_bc_contrast_amount_max { //Check if contrast amount is bigger than contrast amount max
        v_shd_bc_contrast_amount -= 0.05; //Decrease contrast amount by 0.1
    }
    if image_alpha &lt; 1 { //Check if image alpha is smaller than 1
        image_alpha += 0.05; //Increase image alpha by 0.05
    }
}
else {
    if v_shd_bc_contrast_amount &lt; 0 { //Check if contrast amount is smaller than 0
        v_shd_bc_contrast_amount += 0.1; //Increase contrast amount by 0.1
    }
    if v_alarm &gt; 0 { //Check if alarm timer is bigger than 0
        v_alarm -= 1; //Decrease alarm timer by 1
    }
    if image_alpha &gt; 0 { //Check if image alpha is bigger than 0
        image_alpha -= 0.05; //Increase image alpha by 0.05
    }
    if v_alarm = 1 { //Check if alarm timer is 1
        instance_destroy(); //Destroy instance
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Connecting to server
if ds_map_find_value(async_load,"id") == v_http_id_uid { //Check http id
    if ds_map_find_value(async_load,"status") == 0 { //Check if status is 0 (success)
        var v_http_result = ds_map_find_value(async_load,"result"); //Set temporary variable of http result
        if string_length(v_http_result) &lt;= 10 { //Check if result length is smaller than 10 chars
            global.dp_uid = real(ds_map_add_replace(global.v_ds_map_user,"dp_uid",v_http_result,true)); //Replace user id to the new value
            v_txt_details = "Retrieving user email address..."; //Set text details
            v_process += 1; //Increase process by 1
        }
        v_http_id_email = passport_signin(v_dp_uname,v_dp_pass,"dp_email"); //Read user email address
    }
}
if ds_map_find_value(async_load,"id") == v_http_id_email { //Check http id
    if ds_map_find_value(async_load,"status") == 0 { //Check if status is 0 (success)
        var v_http_result = ds_map_find_value(async_load,"result"); //Set temporary variable of http result
        if !v_http_result = "Cannot retrieve data! Contact us for this error." and string_length(v_http_result) &lt;= 255 { //Check result and result length is smaller than 10 chars
            global.dp_email = ds_map_add_replace(global.v_ds_map_user,"dp_email",v_http_result,true); //Replace user email to the new value
            v_txt_details = "Retrieving user status..."; //Set text details
            v_process += 1; //Increase process by 1
        }
        v_http_id_verified = passport_signin(v_dp_uname,v_dp_pass,"dp_verified"); //Read user verified
    }
}
if ds_map_find_value(async_load,"id") == v_http_id_verified { //Check http id
    if ds_map_find_value(async_load,"status") == 0 { //Check if status is 0 (success)
        var v_http_result = ds_map_find_value(async_load,"result"); //Set temporary variable of http result
        if string_length(v_http_result) &lt;= 2 &amp;&amp; string_length(v_http_result) &gt;= 0 { //Check if result length is smaller than 10 chars
            global.dp_verified = real(ds_map_add_replace(global.v_ds_map_user,"dp_verified",v_http_result,true)); //Replace user verified status to the new value
            v_txt_details = "Retrieving user role..."; //Set text details
            v_process += 1; //Increase process by 1
        }
        v_http_id_role = passport_signin(v_dp_uname,v_dp_pass,"dp_role"); //Read user role
    }
}
if ds_map_find_value(async_load,"id") == v_http_id_role { //Check http id
    if ds_map_find_value(async_load,"status") == 0 { //Check if status is 0 (success)
        var v_http_result = ds_map_find_value(async_load,"result"); //Set temporary variable of http result
        if string_length(v_http_result) &lt;= 5 &amp;&amp; string_length(v_http_result) &gt;= 0 { //Check if result length is smaller than 5 chars and bigger than 0
            global.dp_role = ds_map_add_replace(global.v_ds_map_user,"dp_role",v_http_result,true); //Replace user role to the new value
            v_txt_details = "Retrieving user credits..."; //Set text details
            v_process += 1; //Increase process by 1
        }
        v_http_id_ucredits = passport_signin(v_dp_uname,v_dp_pass,"dp_ucredits"); //Read user credits
    }
}
if ds_map_find_value(async_load,"id") == v_http_id_ucredits { //Check http id
    if ds_map_find_value(async_load,"status") == 0 { //Check if status is 0 (success)
        var v_http_result = ds_map_find_value(async_load,"result"); //Set temporary variable of http result
        if string_length(v_http_result) &lt;= 9 &amp;&amp; string_length(v_http_result) &gt;= 0 { //Check if result length is smaller than 9 chars and bigger than 0
            global.dp_ucredits = real(ds_map_add_replace(global.v_ds_map_user,"dp_ucredits",v_http_result,true)); //Replace user credits to the new value
            v_txt_details = "Retrieving user special credits..."; //Set text details
            v_process += 1; //Increase process by 1
        }
        v_http_id_uscredits = passport_signin(v_dp_uname,v_dp_pass,"dp_uscredits"); //Read user special credits
    }
}
if ds_map_find_value(async_load,"id") == v_http_id_uscredits { //Check http id
    if ds_map_find_value(async_load,"status") == 0 { //Check if status is 0 (success)
        var v_http_result = ds_map_find_value(async_load,"result"); //Set temporary variable of http result
        if string_length(v_http_result) &lt;= 4 &amp;&amp; string_length(v_http_result) &gt;= 0 { //Check if result length is smaller than 4 chars and bigger than 0
            global.dp_uscredits = real(ds_map_add_replace(global.v_ds_map_user,"dp_uscredits",v_http_result,true)); //Replace user special credits to the new value
            v_txt_details = "Retrieving user last login date..."; //Set text details
            v_process += 1; //Increase process by 1
        }
        v_http_id_ldate = passport_signin(v_dp_uname,v_dp_pass,"dp_ldate"); //Read user last date login
    }
}
if ds_map_find_value(async_load,"id") == v_http_id_ldate { //Check http id
    if ds_map_find_value(async_load,"status") == 0 { //Check if status is 0 (success)
        var v_http_result = ds_map_find_value(async_load,"result"); //Set temporary variable of http result
        if string_length(v_http_result) = 19 { //Check if result length is 19 chars
            global.dp_ldate = ds_map_add_replace(global.v_ds_map_user,"dp_ldate",v_http_result,true); //Replace user last login date to the new value
            v_process += 1; //Increase process by 1
        }
        if v_process = 7 { //If process is 7 (completed)
            v_txt_details = "Data received..."; //Set text details
            v_enabled = false; //Set message is disabled
            v_alarm = 100; //Set alarm timer to 100
        }
        else {
            v_enabled = false; //Set message is disabled
            v_alarm = 50; //Set alarm timer to 50
            v_txt_details = "Failed..."; //Set text details
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing object
draw_set_font(global.v_msg_fnt); //Set font
draw_set_halign(fa_center); //Set horizontal align
draw_set_valign(fa_middle); //Set vertical align
//Draw shader
shader_set(shdBc); //Load brightness contrast shader
shader_set_uniform_f(shader_get_uniform(shdBc,"brightness_amount"),v_shd_bc_brightness_amount); //Set uniform brightness amount for brightness contrast shader
shader_set_uniform_f(shader_get_uniform(shdBc,"contrast_amount"),v_shd_bc_contrast_amount); //Set uniform contrast amount for brightness contrast shader
draw_surface_ext(surf_shd_bc,view_xview[0],view_yview[0],surf_shd_bc_xscale,surf_shd_bc_yscale,surf_shd_bc_angle,surf_shd_bc_blend,surf_shd_bc_alpha); //Draw and place shader
shader_reset();
if v_shd_blur_enable = 1 { //Check if blur shader is enabled
    //Additional shader (uses brightness contrast shader properties)
    shader_set(shdBlur); //Load blur shader
    draw_surface_ext(surf_shd_bc,view_xview[0],view_yview[0],surf_shd_bc_xscale,surf_shd_bc_yscale,surf_shd_bc_angle,surf_shd_bc_blend,surf_shd_bc_alpha); //Draw and place shader
    shader_reset();
}
//Logo creation
draw_set_alpha(image_alpha); //Set image alpha
draw_text(x,y,v_txt_details); //Draw text details
draw_sprite_ext(sprSplash_crobe_logo,image_index,x-(string_width_ext(v_txt_details,v_msg_fnt_size,display_get_gui_width())/2)-(((290*global.scaling)*image_xscale)/2),y,image_xscale,image_yscale,image_angle,c_white,image_alpha); //Draw loading image
scr_draw_reset(); //Resetting all drawing
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
