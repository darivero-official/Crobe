<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define variables
//Notification variables
v_notif = global.v_notif; //Set notification text
v_notif_fnt = global.v_msg_fnt; //Set font
v_notif_type = global.v_notif_type; //Set notification type
v_notif_timer = global.v_notif_timer; //Set notification timer
v_notif_alpha = 0; //Set notification popup alpha to 0
v_notif_padding = 20*global.scaling; //Set notification padding
v_notif_fnt_size = font_get_size(v_notif_fnt)+(font_get_size(v_notif_fnt)/2); //Get font size from v_notif_fnt
v_notif_width = 0; //Set notification width
v_notif_height = 0; //Set notification height
v_notif_max_l = display_get_gui_width()*(5/8); //Set notification max length (in pixels)
v_notif_l = string_length(global.v_notif); //Set notification length
x = -50; //Set notification x position to -50
//Additional variables
v_enabled = true; //Set notification is enabled
v_m_p = 1*global.scaling; //Border
v_notif_obj = instance_number(objPop_notification); //Count same object
temp_val = 0;
alarm[0] = v_notif_timer*room_speed;
//Functions
alarm[1] = 1; //Replace
if v_notif_type = 1 { //Check if notification type is 1 (error)
    if global.snd_fx = true { //Check if sound effect is enabled
        ex_audio_play("sndNotif_error",0); //Play audio sndNotif_error
    }
}
else {
    if global.snd_fx = true { //Check if sound effect is enabled
        ex_audio_play("sndNotif_info",0); //Play audio sndNotif_info
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y = (v_notif_height+(v_notif_padding))+random(display_get_gui_height()-(v_notif_height+(v_notif_padding))); //Set notification y position
if v_notif_obj &gt; 1 { //Check if objPop_notification is bigger than 1
    depth -= v_notif_obj; //Set object depth
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>v_enabled = false; //Disable this message (destroy)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update variables from create event (especially for sizes)
v_notif_width = (string_width_ext(v_notif,v_notif_fnt_size,v_notif_max_l)); //Set notification width
v_notif_height = (string_height_ext(v_notif,v_notif_fnt_size,v_notif_max_l)/2); //Set notification height
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controlling object
//Controlling popup
if v_enabled = true { //Check if notification is enabled
    if x &lt; 0 { //Check if x is smaller than 0
        x += 2*global.scaling; //Increase x by 2
    }
    if v_notif_alpha &lt; 1 { //Check if notification alpha is smaller than 1
        v_notif_alpha += 0.2; //Increase notification alpha by 0.2
    }
}
else {
    temp_val += 1;
    x -= temp_val*global.scaling; //Increase notification y position by 2
    if v_notif_alpha &gt; 0 { //Check if notification alpha is bigger than 0
       v_notif_alpha -= 0.05; //Decrease notification alpha by 0.2
    }
    else if v_notif_alpha = 0 { //Check if notification alpha is 0
        instance_destroy(); //Destroy object
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing object
draw_set_align("left"); //Set drawing align to left
draw_set_font(v_notif_fnt); //Set notification font
draw_set_alpha(v_notif_alpha); //Set notification alpha
if v_notif_type = 0 { //Check if notification type is 0 (info)
    draw_set_colour(c_green); //Set drawing colour
}
else {
    draw_set_colour(c_red); //Set drawing colour
}
draw_rectangle(x,y-v_notif_height-(v_notif_padding/2),x+v_notif_width+(v_notif_padding*2),y+v_notif_height+(v_notif_padding/2),0); //Draw a rectangle
//Draw vertex shape
draw_primitive_begin(pr_trianglelist);
draw_vertex(x+v_notif_width+(v_notif_padding*2)+1,y-v_notif_height-(v_notif_padding/2));
draw_vertex(x+v_notif_width+(v_notif_padding*2)+1+v_notif_fnt_size,y+v_notif_height+(v_notif_padding/2)+1);
draw_vertex(x+v_notif_width+(v_notif_padding*2)+1,y+v_notif_height+(v_notif_padding/2)+1);
draw_primitive_end();
//Draw text
draw_set_colour(c_gray); //Set message text shadow colour
draw_text_ext(x+v_notif_padding-1,y-1,v_notif,v_notif_fnt_size,v_notif_max_l); //Draw message text shadow
draw_set_colour(c_white); //Set message text colour
draw_text_ext(x+v_notif_padding,y,v_notif,v_notif_fnt_size,v_notif_max_l); //Draw message text
draw_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
